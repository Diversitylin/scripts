#!/usr/bin/env python

import sys
import numpy as np
import argparse 
from oppvasp.vasp.parsers import PoscarParser

parser = argparse.ArgumentParser( description = 'Compares two POSCAR-type files, and prints a summary' )

parser.add_argument('--diff', '-d', action='store_true',
        help='Print displacement vectors for all atoms' )
parser.add_argument('--abs_diff', '-a', action='store_true',
        help='Print abs(displacements) for all atoms' )
parser.add_argument('--rad_diff', '-r', action='store_true',
        help='Print radial displacements (displacement vector norms) for all atoms' )
parser.add_argument('--no_unwrap', '-n', action='store_true',
        help='Don\'t try to unwrap motion over periodic boundaries.' )

parser.add_argument('file1', nargs=1, type=argparse.FileType('r'), help='POSCAR 1')
parser.add_argument('file2', nargs=1, type=argparse.FileType('r'), help='POSCAR 2')

args = parser.parse_args()

poscar1 = PoscarParser(args.file1[0]).get_structure()
poscar2 = PoscarParser(args.file2[0]).get_structure()
if not args.no_unwrap:
    print "Note: Trying to unwrap motion across periodic cell boundaries."
    print "      If you don't want this, run the script with the -w option"
    poscar2.unwrap_pbc( init_pos = poscar1 )

cell1 = poscar1.get_cell()
cell2 = poscar2.get_cell()

pos1 = poscar1.get_positions('cart') 
pos2 = poscar2.get_positions('cart')

print
if np.allclose(cell1, cell2, rtol = 1.e-5, atol = 1.e-8):
    print "The unit cell did not change"
else:
    print ""
    print cell2-cell1
print

if np.allclose(pos1, pos2, rtol = 1.e-5, atol = 1.e-8):
    print "The two files are practically the same. \n" \
        + "For all coordinates, \n" \
        + "   absolute(a - b) <= (atol + rtol * absolute(b)), \n" \
        + "where rtol = 1.e-5 and atol = 1.e-8"
else:
    diff = pos2 - pos1
    norms = np.sqrt(np.sum((pos2-pos1)**2,axis=1))
    
    if args.rad_diff:
        print "Radial displacements, in Angstrom:"
        for i,n in enumerate(norms):
            print "%5d : %.5f" % ((i+1),n)
        print

    if args.abs_diff:
        print "Absolute values of displacement, in Angstrom:"
        print np.abs(diff)
        print

    if args.diff:
        print "Diff:"
        print diff
        print

    max_idx = np.argmax(norms)
    min_idx = np.argmin(norms)
    #mean_disp = np.mean(norms)
    print "Mean/median radial atom displacement: %.3f / %.3f Angstrom" % (np.mean(norms), np.median(norms))
    print "Min displacement: %.3f Angstrom (atom no. %d)" % (norms[min_idx], min_idx)
    print "Max displacement: %.3f Angstrom (atom no. %d)" % (norms[max_idx], max_idx)
    print "Mean drift (direction-specific displacement) in Angstrom:"
    print "  in x direction: %.3f, y direction: %.3f, z-direction: %.3f " % (np.mean(diff[:,0]), np.mean(diff[:,1]), np.mean(diff[:,2]))
